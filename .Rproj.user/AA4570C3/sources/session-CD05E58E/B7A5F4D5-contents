# Fisher's Exact Test - are R-genes enriched amongst those that possess a particular chromatin modification?
df <- allResultsFrequencies[grepl(tissue, allResultsFrequencies$SampleGenes),]

hypergeometricTest <- data.frame()

for (mod in unique(allResultsFrequencies$Modification)) {
  df1 <- df[df$Modification==mod,]
  
  for (r in unique(allResultsFrequencies$Region)) {
    df2 <- df1[df1$Region==r,]
    
    for (level in unique(allResultsFrequencies$Expression)) {
      df3 <- df2[df2$Expression==level,]
      df3 <- df3[!grepl("luster", df3$SampleGenes),]
      
      # Create a list of genes from each each sample set.
      geneList <- c()
      
      for (row in 1:nrow(df3)) {
        geneList <- append(geneList, rep(df3[row,"SampleGenes"], times = df3[row, "n"]))
      }
      
      meanNLRs <- c()
      for (n in 1:10) {
        geneSample <- sample(geneList, length(geneList)*0.1)
        meanNLRs <- append(meanNLRs, length(geneSample[grepl("NLRs", geneSample)]))
      }
      
      meanNLRs <- mean(meanNLRs)
      
      if (length(geneSample) > 1) {
        
        statTest <- fisher.test(matrix(c(meanNLRs, length(geneList[grepl("NLRs", geneList)])-meanNLRs,
                                         length(geneSample) - meanNLRs, length(geneList[grepl("control", geneList)])-length(geneSample) - meanNLRs), 2,2), 
                                alternative = "less")
        
        hypergeometricTest <- rbind(hypergeometricTest, data.frame(Expression = level,
                                                                   Modification = mod,
                                                                   Region = r,
                                                                   Sample.R.genes = meanNLRs,
                                                                   Sample.all.genes = length(geneSample),
                                                                   All.R.genes = length(geneList[grepl("NLRs", geneList)]),
                                                                   All.genes = length(geneList),
                                                                   p.value = statTest$p.value))
      }
    }
  }
}
write.csv(hypergeometricTest, file = paste("Tests\\", tissue, "_Fisher.Test_frequencies.csv", sep = ""))